# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project's gitignore.
#  For PyCharm Community Edition, use 'pycharm-ce' instead of 'pycharm'.
.idea/

# Visual Studio Code
.vscode/

# AI Assistants
.claude/
.cursor/
*.copilot

# AI/ML specific
# Model files
*.bin
*.pt
*.pth
*.onnx
*.pb
*.h5
*.pkl
*.joblib
*.gguf
*.safetensors

# Data files
*.csv
*.json
*.parquet
*.arrow
*.feather
*.hdf5
*.h5

# Experiment tracking
mlruns/
wandb/
.wandb/
tensorboard_logs/
logs/
checkpoints/
artifacts/

# Jupyter
.ipynb_checkpoints/
*/.ipynb_checkpoints/*

# DVC
.dvc/
.dvcignore

# Large files
*.tar
*.tar.gz
*.zip
*.7z
*.rar

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Linux
*~

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# IDE
*.sublime-project
*.sublime-workspace

# Cache directories
.cache/
__pycache__/
*.pyc
*.pyo

# User-specific files (examples)
# Remove these comments and adjust as needed
# config/personal/
# secrets/
# *.key
# *.pem

# AI workspace (if you don't want to track user workspaces)
# Uncomment if you don't want to track the ai-workspace contents
# ai-workspace/projects/
# ai-workspace/models/
# ai-workspace/datasets/
# ai-workspace/experiments/
# ai-workspace/model-cache/
# ai-workspace/model-registry/

# Documentation builds
docs/_build/
docs/build/
site/

# Backup files
*.bak
*.backup
*.orig

# Lock files
package-lock.json
yarn.lock
Pipfile.lock
poetry.lock

# Node modules (if any JavaScript tools are used)
node_modules/

# Conda environments
conda-meta/